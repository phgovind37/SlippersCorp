#=============================#
# Database config
#=============================#

db.driver=com.mysql.jdbc.Driver
db.url=jdbc:mysql://127.0.0.1:3306/slipperscorp
db.user=root
db.pwd=root

db.erp.host=127.0.0.1:3306
db.erp.schema=slipperscorp

#=============================#
# ORM config
#=============================#
orm.dialect=org.hibernate.dialect.MySQLDialect
orm.autogenerate=validate
orm.debug=false
#orm.cache=false
#orm.cache.query=true
#orm.cache.factory=org.hibernate.cache.ehcache.EhCacheRegionFactory

#=============================#
# Connection Pool config
#=============================#
pool.testQuery=select 1
pool.minSize=2
pool.maxSize=10
pool.debug=true

# no of connection increments at a time when pool is exhausted, should not be too big, neither too small
# default:3 
pool.c3p0.acquireIncrement=3
# should not be too small, otherwise connection would be freed too frequent to be practical
# default:0s 
pool.c3p0.maxIdleTime=240
# bring back the connectionCount back down to minPoolSize after a spike
# default:0s 
pool.c3p0.maxIdleTimeExcessConnections=300
# if more connections from minSize after the given time, it kills those connections & frees resources back to minimum
# default:0s
pool.c3p0.idleConnectionTestPeriod=210
# for larger load use more number of threads to control the maxSize of connections
# default:3 
pool.c3p0.numHelperThreads=5
# connections used for the given time, then assume them as orphan & reclaim them
# default:0s 
pool.c3p0.unreturnedConnectionTimeout=360
# time to wait for a Connection to be checked-in or acquired when the pool is exhausted
# default:0ms 
pool.c3p0.checkoutTimeout=1000

# validates the connection when it is returned to the pool
# default:false 
pool.c3p0.testConnectionOnCheckin=true
# ensure active connections before use, would be too expensive to do
# default:false 
pool.c3p0.testConnectionOnCheckOut=true

# attempt to acquire new connection from db with the given no of times, before giving up
# default:30s
pool.c3p0.acquireRetryAttempts=10
# time to wait between retry attempts
# default:1000ms
pool.c3p0.acquireRetryDelay=1000

# determines the period between the check cycles of maxConnectionAge, maxIdleTime, maxIdleTimeExcessConnections, unreturnedConnectionTimeout
# default:0s (automatic)
pool.c3p0.propertyCycle=0
