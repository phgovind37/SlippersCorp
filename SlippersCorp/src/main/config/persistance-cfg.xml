<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
		
		<tx:annotation-driven transaction-manager="transactionManager" order="1" />
		
	<!-- ========================= DATASOURCE ======================== -->
	<!-- <bean id="dataSource" 
         class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
	<property name="url" value="jdbc:mysql://localhost:3306/slipperscorp" />
	<property name="username" value="root" />
	<property name="password" value="root" />
	</bean> -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	<!-- 	database config -->
		<property name="driverClass" value="${db.driver}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="user" value="${db.user}" />
		<property name="password" value="${db.pwd}" />
	<!-- 	pool config -->
		<property name="preferredTestQuery" value="${pool.testQuery}" />
		<property name="initialPoolSize" value="${pool.minSize}" />
		<property name="minPoolSize" value="${pool.minSize}" />
		<property name="maxPoolSize" value="${pool.maxSize}" />
		<property name="acquireIncrement" value="${pool.c3p0.acquireIncrement}" />
		<property name="maxIdleTime" value="${pool.c3p0.maxIdleTime}" />
		<property name="maxIdleTimeExcessConnections" value="${pool.c3p0.maxIdleTimeExcessConnections}" />
		<property name="idleConnectionTestPeriod" value="${pool.c3p0.idleConnectionTestPeriod}" />
		<property name="numHelperThreads" value="${pool.c3p0.numHelperThreads}" />
		<property name="unreturnedConnectionTimeout" value="${pool.c3p0.unreturnedConnectionTimeout}" />
		<property name="checkoutTimeout" value="${pool.c3p0.checkoutTimeout}" />
		<property name="testConnectionOnCheckin" value="${pool.c3p0.testConnectionOnCheckin}" />
		<property name="testConnectionOnCheckout" value="${pool.c3p0.testConnectionOnCheckOut}" />
		<property name="acquireRetryAttempts" value="${pool.c3p0.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${pool.c3p0.acquireRetryDelay}" />
		<property name="propertyCycle" value="${pool.c3p0.propertyCycle}" />
		<property name="debugUnreturnedConnectionStackTraces" value="${pool.debug}" />
		<property name="privilegeSpawnedThreads" value="true" />
		<property name="contextClassLoaderSource" value="library" />
	</bean>

	<!-- ========================== HIBERNATE ============================ -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- This property loads the datasource(jdbc mysql in this case) for the 
			session factory -->
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.techconquerors.slippers.jpa" />
		<!-- <property name="entityInterceptor">
			<bean class="com.avventuro.common.Interceptor" /> 
		</property> -->
		<property name="hibernateProperties">
			<props>
	            <prop key="hibernate.dialect">${orm.dialect}</prop>
	            <prop key="hibernate.hbm2ddl.auto">orm.autogenerate=validate</prop>
	            <prop key="hibernate.show_sql">orm.debug</prop>
	            <!-- <prop key="hibernate.cache.use_second_level_cache">${orm.cache}</prop>
	            <prop key="hibernate.cache.use_query_cache">${orm.cache.query}</prop>
	            <prop key="hibernate.cache.region.factory_class">${orm.cache.factory}</prop> -->
	        </props>
		</property>
	</bean>
	
	<!-- ========================== Hibernate Continue ============================ -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
</beans>